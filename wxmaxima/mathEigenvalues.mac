Print("======================================");
kill(all);
print("Q 9.1");

A:matrix([4,0],[0,2]);
eigenvectors(A);

A:matrix([0,0],[0,0]);
eigenvectors(A);

A:matrix([2,1],[1,2]);
eigenvectors(A);


A:matrix([2,3],[1,2]);
eigenvectors(A);


A:matrix([2,3],[-1,2]);
eigenvectors(A);

A:matrix([0,4],[4,0]);
eigenvectors(A);

A:matrix([0,-4],[4,0]);
eigenvectors(A);


A:matrix([a,b],[-b,a]);
eigenvectors(A);


A:matrix([0.4,0.6],[-0.6,-0.4]);
eigenvectors(A);


A:matrix([cos(x),-sin(x)],[sin(x),cos(x)]);
eigenvectors(A);


A:matrix([1,0,-1],[1,0,1],[0,0,-1]);
eigenvectors(A);


A:matrix([2,5,2],[0,4,6],[0,0,1]);
eigenvectors(A);


A:matrix([13,5,2],[2,7,-8],[5,4,7]);
eigenvectors(A);


A:matrix([-1,0,6,0],[0,-1,0,6],[0,0,-1,-2],[0,0,-2,-1]);
eigenvectors(A);


A:matrix([-3,0,4,2],[0,1,-2,4],[2,4,-1,-2],[0,2,-2,3]);
eigenvectors(A);

A:matrix([4,2],[2,4]);
eigenvectors(A);

Print("======================================");
kill(all);
print("example 9.7");

A:matrix([0.8,0.1,0],[0.2,0.7,0.1],[0,0.2,0.9]);
transpose(A);

eigenvectors(A);

Print("======================================");
kill(all);
print("example 9.8");

L:matrix([0,2.3,0.4],[0.6,0,0],[0,0.3,0]);
xA:matrix([500,500,500]);
xA:matrix([2600,2600,2600]);
I:matrix([1,0,0],[0,1,0],[0,0,1]);

xB:L . xA;
xC: L . xB;
xD: L . xC;

LL:L-k*I;
eq:determinant(LL);
solve(eq,k);
eigenvectors(L);


Print("======================================");
kill(all);
print("Q 9.18");

A:matrix([5,2],[2,5]);
[val,vec]:eigenvectors(A);
kvecA:vec[1][1];
180/(%pi)*atan(kvecA[2]/kvecA[1]);
float(%);
kvecB:vec[2][1];
180/(%pi)*atan(kvecB[2]/kvecB[1]);
float(%);


A:matrix([9,8],[8,2]);
[val,vec]:eigenvectors(A);
kvecA:vec[1][1];
180/(%pi)*atan(kvecA[2]/kvecA[1]);
float(%);
kvecB:vec[2][1];
180/(%pi)*atan(kvecB[2]/kvecB[1]);
float(%);

A:matrix([1,2],[4,1]);
[val,vec]:eigenvectors(A);
kvecA:vec[1][1];
180/(%pi)*atan(kvecA[2]/kvecA[1]);
float(%);
kvecB:vec[2][1];
180/(%pi)*atan(kvecB[2]/kvecB[1]);
float(%);

A:matrix([2,3],[3,12]);
[val,vec]:eigenvectors(A);
kvecA:vec[1][1];
180/(%pi)*atan(kvecA[2]/kvecA[1]);
float(%);
kvecB:vec[2][1];
180/(%pi)*atan(kvecB[2]/kvecB[1]);
float(%);


A:matrix([3,1],[5,7]);
[val,vec]:eigenvectors(A);
kvecA:vec[1][1];
180/(%pi)*atan(kvecA[2]/kvecA[1]);
float(%);
kvecB:vec[2][1];
180/(%pi)*atan(kvecB[2]/kvecB[1]);
float(%);

A:matrix([1.25,0.45],[0.75,2.5]);
[val,vec]:eigenvectors(A);
kvecA:vec[1][1];
180/(%pi)*atan(kvecA[2]/kvecA[1]);
float(%);
kvecB:vec[2][1];
180/(%pi)*atan(kvecB[2]/kvecB[1]);
float(%);

Print("======================================");
kill(all);
print("Q 9.24");

A:matrix([0.2,0.5],[0.8,0.5]);
[val,vec]:eigenvectors(A);

A:matrix([0.2,0.5,0.3],[0.3,0.5,0.2],[0.5,0.2,0.3]);
[val,vec]:eigenvectors(A);

A:matrix([0.4,0.1,0.3],[0.5,0.1,0.2],[0.1,0.8,0.5]);
[val,vec]:eigenvectors(A);

Print("======================================");
kill(all);
print("Q 9.27");

L:matrix([0,3.45,0.6],[0.9,0,0],[0,0.45,0]);
eigenvectors(L);

L:matrix([0,9,5],[0.4,0,0],[0,0.4,0]);
eigenvectors(L);

Print("======================================");
kill(all);
print("Q 9.29");

A:matrix([0.1,0.5,0],[0.8,0,0.4],[0.1,0.5,0.6]);
eigenvectors(A);


Print("======================================");
kill(all);
print("Q 9.31");

y:matrix([0.1,0.3,0.1]);
A:matrix([0.1,0.4,0.2],[0.5,0,0.1],[0.1,0.4,0.4]);
eigenvectors(A);

Print("======================================");
kill(all);
print("example 9.10");

A:matrix([4,2,-1],[2,8,3],[5,1,3]);

R:1/2*(A+transpose(A));
S:1/2*(A-transpose(A));

Print("======================================");
kill(all);
print("example 9.11");

R:matrix([1,3],[3,1]);
S:matrix([0,3],[-3,0]);
C:matrix([2,4],[1,2]);
eigenvalues(R);
eigenvalues(S);
eigenvalues(C);


Print("======================================");
kill(all);
print("Q 9.36");

A:matrix([0.8,0.6],[-0.6,0.8]);
eigenvectors(A);

A:matrix([2,3],[-3,2]);
eigenvectors(A);

A:matrix([a,b],[-b,a]);
eigenvectors(A);

A:matrix([4,0,0],[0,2,-2],[0,-2,5]);
eigenvectors(A);


A:matrix([a,b,b],[b,a,b],[b,b,a]);
eigenvectors(A);

A:matrix([0,9,-12],[-9,0,20],[12,-20,0]);
eigenvectors(A);


A:matrix([1,0,0],[0,sin(a),cos(a)],[0,-cos(a),sin(a)]);
eigenvectors(A);

A:matrix([0,0,1],[0,1,0],[-1,0,0]);
eigenvectors(A);


Print("======================================");
kill(all);
print("Q 9.44");

A:matrix([4/9,8/9,1/9],[-7/9,4/9,-4/9],[-4/9,1/9,8/9]);
eigenvectors(A);

invert(A);

Print("======================================");
kill(all);
print("example 9.14");

A:matrix([4,2],[2,4]);
eigenvectors(A);

Print("======================================");
kill(all);
print("example 9.16");

A:matrix([3,5],[2,6]);
eigenvectors(A);
P:matrix([1,5],[1,-2]);
determinant(P);


Pi:invert(P);

As:Pi . A . P;

eigenvectors(A);
eigenvectors(As);

x1:matrix([1,1]);
x2:matrix([5,-2]);

y1:Pi . x1;
y2:Pi . x2;


Print("======================================");
kill(all);
print("example 9.17");

A:matrix([-2,-4,2],[-2,1,2],[4,2,5]);

eigenvectors(A);
charpoly(A,x);

X:matrix([1,1,1],[6,-3/2,1/2],[16,-1/2,-1/2]);
Xi:invert(X);

A . X;
Xi . A . X;


Print("======================================");
kill(all);
print("example 9.18");

x:matrix([x1,x2]);
A:matrix([5,6],[2,7]);

transpose(x) . A .x;
expand(%);

C:matrix([5,4],[4,7]);

transpose(x) . C .x;
expand(%);

Print("======================================");
kill(all);
print("Q 9.49");

La:1;
Lb:-1;
c:3;
d:-1;
eq1:(a-La)*(d-La)-b*c=0;
eq2:(a-Lb)*(d-Lb)-b*c=0;

solnlst:solve([eq1,eq2],[a,b]);
soln:solnlst[1];
sol:map(rhs,soln);

aa:sol[1];
bb:sol[2];

A:matrix([aa,bb],[c,d]);
P:matrix([2,-3],[1,3]);
As:invert(P) . A . P;

eigenvectors(A);
[val,y]:eigenvectors(As);

P . y[1][1];
P . y[2][1];
x:eigenvectors(A);


Print("======================================");
kill(all);
print("Q 9.50");

La:2;
Lb:3;
c:-3;
d:-1;
eq1:(a-La)*(d-La)-b*c=0;
eq2:(a-Lb)*(d-Lb)-b*c=0;

solnlst:solve([eq1,eq2],[a,b]);
soln:solnlst[1];
sol:map(rhs,soln);

aa:sol[1];
bb:sol[2];

A:matrix([aa,bb],[c,d]);
P:matrix([1,4],[2,5]);
As:invert(P) . A . P;

eigenvectors(A);
[val,y]:eigenvectors(As);

P . y[1][1];
P . y[2][1];
x:eigenvectors(A);


Print("======================================");
kill(all);
print("Q 9.51");

La:-2;
Lb:-1;
c:2;
d:3;
eq1:(a-La)*(d-La)-b*c=0;
eq2:(a-Lb)*(d-Lb)-b*c=0;

solnlst:solve([eq1,eq2],[a,b]);
soln:solnlst[1];
sol:map(rhs,soln);

aa:sol[1];
bb:sol[2];

A:matrix([aa,bb],[c,d]);
P:matrix([-4,3],[-5,2]);
As:invert(P) . A . P;

eigenvectors(A);
[val,y]:eigenvectors(As);

P . y[1][1];
P . y[2][1];
x:eigenvectors(A);



Print("======================================");
kill(all);
print("Q 9.52");

La:1;
Lb:-1;
Lc:2;

d:1;
e:1;
f:-1;
g:-1;
h:1;
i:1;

A:matrix([a,b,c],[d,e,f],[g,h,i]);
I:matrix([1,0,0],[0,1,0],[0,0,1]);
x:matrix([x1],[x2],[x3]);
eq1:determinant(A-La*I);
eq2:determinant(A-Lb*I);
eq3:determinant(A-Lc*I);

solnlst:solve([eq1,eq2,eq3],[a,b,c]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];

A:matrix([aa,bb,cc],[d,e,f],[g,h,i]);
P:matrix([1,0,3],[0,1,0],[-1,1,0]);
As:invert(P) . A . P;

eigenvectors(A);
[val,y]:eigenvectors(As);

P . y[1][1];
P . y[2][1];
x:eigenvectors(A);


Print("======================================");
kill(all);
print("Q 9.53");

La:0;
Lb:1;
Lc:-1;

d:1;
e:0;
f:2;
g:-1;
h:1;
i:0;

A:matrix([a,b,c],[d,e,f],[g,h,i]);
I:matrix([1,0,0],[0,1,0],[0,0,1]);
x:matrix([x1],[x2],[x3]);
eq1:determinant(A-La*I);
eq2:determinant(A-Lb*I);
eq3:determinant(A-Lc*I);

solnlst:solve([eq1,eq2,eq3],[a,b,c]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];

A:matrix([aa,bb,cc],[d,e,f],[g,h,i]);
P:matrix([-1,1,0],[1,0,2],[1,0,1]);
As:invert(P) . A . P;

eigenvectors(A);
[val,y]:eigenvectors(As);

P . y[1][1];
P . y[2][1];
x:eigenvectors(A);

Print("======================================");
kill(all);
print("Q 9.55");

A:matrix([1,2],[2,4]);
[val,vec]:eigenvectors(A);

a:vec[1][1];
b:vec[2][1];

X:matrix([1,1],[-1/2,2]);
D:invert(X) . A . X;

Print("======================================");
kill(all);
print("Q 9.56");

L1:1;
L2:-1;
x1:1;
x2:1/2;
xx1:1;
xx2:-1/2;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);
eigenvectors(A);

X:matrix([x1,xx1],[x2,xx2]);
D:invert(X) . A . X;



Print("======================================");
kill(all);
print("Q 9.57");

L1:1;
L2:2;
x1:1;
x2:2;
xx1:1;
xx2:-3;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);
eigenvectors(A);

X:matrix([x1,xx1],[x2,xx2]);
D:invert(X) . A . X;


Print("======================================");
kill(all);
print("Q 9.58");

L1:-2;
L2:3;
x1:1;
x2:-2;
xx1:1;
xx2:-3;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);
eigenvectors(A);

X:matrix([x1,xx1],[x2,xx2]);
D:invert(X) . A . X;

Print("======================================");
kill(all);
print("Q 9.59");

L1:1;
L2:-1;
L3:0;
x1:1;
x2:-1;
x3:0;
xx1:1;
xx2:1;
xx3:-1;
xxx1:-1;
xxx2:1;
xxx3:-1;

eq1:a*x1+b*x2+c*x3=L1*x1;
eq2:d*x1+e*x2+f*x3=L1*x2;
eq3:g*x1+h*x2+i*x3=L1*x3;
eq4:a*xx1+b*xx2+c*xx3=L2*xx1;
eq5:d*xx1+e*xx2+f*xx3=L2*xx2;
eq6:g*xx1+h*xx2+i*xx3=L2*xx3;
eq7:a*xxx1+b*xxx2+c*xxx3=L3*xxx1;
eq8:d*xxx1+e*xxx2+f*xxx3=L3*xxx2;
eq9:g*xxx1+h*xxx2+i*xxx3=L3*xxx3;

solnlst:solve([eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9],[a,b,c,d,e,f,g,h,i]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];
ee:sol[5];
ff:sol[6];
gg:sol[7];
hh:sol[8];
ii:sol[9];
A:matrix([aa,bb,cc],[dd,ee,ff],[gg,hh,ii]);
eigenvectors(A);

X:matrix([x1,xx1,xxx1],[x2,xx2,xxx2],[x3,xx3,xxx3]);
D:invert(X) . A . X;



Print("======================================");
kill(all);
print("Q 9.60");

L1:1;
L2:2;
L3:-1;
x1:1;
x2:2;
x3:1;
xx1:1;
xx2:0;
xx3:2;
xxx1:1;
xxx2:-1;
xxx3:-1;

eq1:a*x1+b*x2+c*x3=L1*x1;
eq2:d*x1+e*x2+f*x3=L1*x2;
eq3:g*x1+h*x2+i*x3=L1*x3;
eq4:a*xx1+b*xx2+c*xx3=L2*xx1;
eq5:d*xx1+e*xx2+f*xx3=L2*xx2;
eq6:g*xx1+h*xx2+i*xx3=L2*xx3;
eq7:a*xxx1+b*xxx2+c*xxx3=L3*xxx1;
eq8:d*xxx1+e*xxx2+f*xxx3=L3*xxx2;
eq9:g*xxx1+h*xxx2+i*xxx3=L3*xxx3;

solnlst:solve([eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9],[a,b,c,d,e,f,g,h,i]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];
ee:sol[5];
ff:sol[6];
gg:sol[7];
hh:sol[8];
ii:sol[9];
A:matrix([aa,bb,cc],[dd,ee,ff],[gg,hh,ii]);
eigenvectors(A);

X:matrix([x1,xx1,xxx1],[x2,xx2,xxx2],[x3,xx3,xxx3]);
D:invert(X) . A . X;



Print("======================================");
kill(all);
print("Q 9.61");

L1:5;
L2:2;
L3:-1;
x1:1;
x2:-2;
x3:1;
xx1:1;
xx2:-1;
xx3:0;
xxx1:1;
xxx2:1;
xxx3:-1;

eq1:a*x1+b*x2+c*x3=L1*x1;
eq2:d*x1+e*x2+f*x3=L1*x2;
eq3:g*x1+h*x2+i*x3=L1*x3;
eq4:a*xx1+b*xx2+c*xx3=L2*xx1;
eq5:d*xx1+e*xx2+f*xx3=L2*xx2;
eq6:g*xx1+h*xx2+i*xx3=L2*xx3;
eq7:a*xxx1+b*xxx2+c*xxx3=L3*xxx1;
eq8:d*xxx1+e*xxx2+f*xxx3=L3*xxx2;
eq9:g*xxx1+h*xxx2+i*xxx3=L3*xxx3;

solnlst:solve([eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9],[a,b,c,d,e,f,g,h,i]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];
ee:sol[5];
ff:sol[6];
gg:sol[7];
hh:sol[8];
ii:sol[9];
A:matrix([aa,bb,cc],[dd,ee,ff],[gg,hh,ii]);
eigenvectors(A);

X:matrix([x1,xx1,xxx1],[x2,xx2,xxx2],[x3,xx3,xxx3]);
D:invert(X) . A . X;



Print("======================================");
kill(all);
print("Q 9.62");

L1:3;
L2:2;
L3:1;
x1:1;
x2:0;
x3:-1;
xx1:1;
xx2:1;
xx3:2;
xxx1:1;
xxx2:1;
xxx3:0;

eq1:a*x1+b*x2+c*x3=L1*x1;
eq2:d*x1+e*x2+f*x3=L1*x2;
eq3:g*x1+h*x2+i*x3=L1*x3;
eq4:a*xx1+b*xx2+c*xx3=L2*xx1;
eq5:d*xx1+e*xx2+f*xx3=L2*xx2;
eq6:g*xx1+h*xx2+i*xx3=L2*xx3;
eq7:a*xxx1+b*xxx2+c*xxx3=L3*xxx1;
eq8:d*xxx1+e*xxx2+f*xxx3=L3*xxx2;
eq9:g*xxx1+h*xxx2+i*xxx3=L3*xxx3;

solnlst:solve([eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9],[a,b,c,d,e,f,g,h,i]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];
ee:sol[5];
ff:sol[6];
gg:sol[7];
hh:sol[8];
ii:sol[9];
A:matrix([aa,bb,cc],[dd,ee,ff],[gg,hh,ii]);
eigenvectors(A);

X:matrix([x1,xx1,xxx1],[x2,xx2,xxx2],[x3,xx3,xxx3]);
D:invert(X) . A . X;



Print("======================================");
kill(all);
print("Q 9.65");
load(linearalgebra);
load(diag);

Q:10;

L1:4;
L2:6;
x1:1;
x2:-1;
xx1:1;
xx2:1;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);

[val,uvec]:uniteigenvectors(A);
L1:val[1][1];
L2:val[1][2];
v1:transpose(uvec[1][1]);
v2:transpose(uvec[2][1]);


eq1:L1/Q*y1^2+L2/Q*y2^2=1;

X:matrix([v1[1,1],v2[1,1]],[v1[2,1],v2[2,1]]);


Print("======================================");
kill(all);
print("Q 9.64");
load(linearalgebra);
load(diag);

Q:30;

L1:15;
L2:-15;
x1:1;
x2:-2;
xx1:2;
xx2:1;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);

[val,uvec]:uniteigenvectors(A);
L1:val[1][1];
L2:val[1][2];
v1:transpose(uvec[1][1]);
v2:transpose(uvec[2][1]);


eq1:L1/Q*y1^2+L2/Q*y2^2=1;

X:matrix([v1[1,1],v2[1,1]],[v1[2,1],v2[2,1]]);



Print("======================================");
kill(all);
print("Q 9.65");
load(linearalgebra);
load(diag);

Q:0;

L1:6;
L2:8;
x1:1;
x2:1;
xx1:1;
xx2:-1;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);

[val,uvec]:uniteigenvectors(A);
L1:val[1][1];
L2:val[1][2];
v1:transpose(uvec[1][1]);
v2:transpose(uvec[2][1]);


eq1:L1/Q*y1^2+L2/Q*y2^2=1;

X:matrix([v1[1,1],v2[1,1]],[v1[2,1],v2[2,1]]);


Print("======================================");
kill(all);
print("Q 9.66");
load(linearalgebra);
load(diag);

Q:16;

L1:2;
L2:8;
x1:-1;
x2:1;
xx1:1;
xx2:1;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);

[val,uvec]:uniteigenvectors(A);
L1:val[1][1];
L2:val[1][2];
v1:transpose(uvec[1][1]);
v2:transpose(uvec[2][1]);


eq1:L1/Q*y1^2+L2/Q*y2^2=1;

X:matrix([v1[1,1],v2[1,1]],[v1[2,1],v2[2,1]]);



Print("======================================");
kill(all);
print("Q 9.67");
load(linearalgebra);
load(diag);

Q:13;

L1:13;
L2:39;
x1:2;
x2:3;
xx1:3;
xx2:-2;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);

[val,uvec]:uniteigenvectors(A);
L1:val[1][1];
L2:val[1][2];
v1:transpose(uvec[1][1]);
v2:transpose(uvec[2][1]);


eq1:L1/Q*y1^2+L2/Q*y2^2=1;

X:matrix([v1[1,1],v2[1,1]],[v1[2,1],v2[2,1]]);



Print("======================================");
kill(all);
print("Q 9.68");
load(linearalgebra);
load(diag);

Q:32;

L1:1;
L2:16;
x1:2;
x2:-1;
xx1:1;
xx2:2;

eq1:a*x1+b*x2=L1*x1;
eq2:c*x1+d*x2=L1*x2;
eq3:a*xx1+b*xx2=L2*xx1;
eq4:c*xx1+d*xx2=L2*xx2;

solnlst:solve([eq1,eq2,eq3,eq4],[a,b,c,d]);
soln:solnlst[1];
sol:map(rhs,soln);
aa:sol[1];
bb:sol[2];
cc:sol[3];
dd:sol[4];

A:matrix([aa,bb],[cc,dd]);

[val,uvec]:uniteigenvectors(A);
L1:val[1][1];
L2:val[1][2];
v1:transpose(uvec[1][1]);
v2:transpose(uvec[2][1]);


eq1:L1/Q*y1^2+L2/Q*y2^2=1;

X:matrix([v1[1,1],v2[1,1]],[v1[2,1],v2[2,1]]);


Print("======================================");
kill(all);
print("example 9.22");
load(linearalgebra);
load(diag);

A:matrix([3,-4+5*%i],[-4-5*%i,-7]);
charpoly(A,x);
expand(%);
eigenvectors(A);

A:matrix([3*%i,2+%i],[-2+%i,-7*%i]);
charpoly(A,x);
expand(%);
eigenvectors(A);


A:matrix([%i/2,sqrt(3)/2],[sqrt(3)/2,%i/2]);
charpoly(A,x);
expand(%);
eigenvectors(A);

Print("======================================");
kill(all);
print("example 9.23");
load(linearalgebra);
load(diag);

A:matrix([3,-4+5*%i],[-4-5*%i,-7]);
x:matrix([1-%i],[4*%i]);

Ax:A . x;

xAx:transpose(conjugate(x)) .A . x;



Print("======================================");
kill(all);
print("Q 9.69");
load(linearalgebra);
load(diag);

A:matrix([3,%i*2],[-%i*2,6]);
transpose(conjugate(A));
eigenvectors(A);

A:matrix([%i,1-%i],[-1-%i,0]);
-1*transpose(conjugate(A));
eigenvectors(A);


A:matrix([%i*4/5,3/5],[3/5,%i*4/5]);
transpose(conjugate(A));
invert(A);
eigenvectors(A);

A:matrix([0,%i*3],[%i*3,0]);
transpose(conjugate(A));
invert(A);
eigenvectors(A);


A:matrix([%i,0,0],[0,0,%i],[0,%i,-%i*2]);
-1*transpose(conjugate(A));
invert(A);
eigenvectors(A);

Print("======================================");
kill(all);
print("Q 9.75");
load(linearalgebra);
load(diag);

A:matrix([3,-4+5*%i],[-4-5*%i,-7]);
charpoly(A,x);
expand(%);
eigenvectors(A);

A:matrix([3*%i,2+%i],[-2+%i,-7*%i]);
charpoly(A,x);
expand(%);
eigenvectors(A);


A:matrix([%i/2,sqrt(3)/2],[sqrt(3)/2,%i/2]);
charpoly(A,x);
expand(%);
eigenvectors(A);


Print("======================================");
kill(all);
print("Q 9.76");
load(linearalgebra);
load(diag);

A:matrix([3,2-2*%i],[2+2*%i,-4]);
x:matrix([2*%i],[-4+2*%i]);
transpose(conjugate(A));

transpose(conjugate(x)) . A . x;
expand(%);



A:matrix([0,-3+2*%i],[3+2*%i,%i]);
x:matrix([2],[3*%i]);
-1*transpose(conjugate(A));

transpose(conjugate(x)) . A . x;
expand(%);



A:matrix([%i*2,1,4+%i*3],[-1,0,5*%i],[-4+%i*3,5*%i,-%i]);
x:matrix([%i],[1],[-%i]);
-1*transpose(conjugate(A));

transpose(conjugate(x)) . A . x;
expand(%);


A:matrix([1,%i,5],[-%i,-2,0],[5,0,3]);
x:matrix([1],[-%i],[%i]);
transpose(conjugate(A));

transpose(conjugate(x)) . A . x;
expand(%);

